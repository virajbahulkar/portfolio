---
// Imports
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import Base from '@templates/Base.astro';
import { CTA } from '@partials/CTA';
import { Footer } from '@partials/Footer';
import { AppConfig } from '@utils/AppConfig';

export interface Props {
  project: CollectionEntry<'project'>;
}

// Fetch all projects to generate static paths
export async function getStaticPaths() {
  const projects = await getCollection('project');

  const projectsResult = projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));

  return [...projectsResult];
}

const { project } = Astro.props;
const { Content } = await project.render();

const { title, description, startDate, category, image } = project.data;
const categories = category.split(', ');

const titleSuffix = ` - ${AppConfig.site_name}`;
const pageTitle = `${title}${titleSuffix}`;
const pageUrl = `${AppConfig.site_url}/projects/${project.slug}/`;
---


<Base head={{ title: pageTitle, description, url: pageUrl }}>
  <div class="container mx-auto px-6 py-12 animate-fadeIn">
    <!-- Project Header -->
    <div class="shadow-xl rounded-2xl p-6 mb-8 ">
      <h1 class="text-4xl font-bold text-gradient bg-gradient-to-r from-purple-600 to-blue-500 bg-clip-text text-transparent mb-4">{title}</h1>
      <p class=" mb-4">{description}</p>
      <div class="flex items-center space-x-4 mb-4">
        <span class="text-sm ">Published on: {new Date(startDate).toLocaleDateString()}</span>
        <div class="flex flex-wrap space-x-2">
          {categories.map(tag => (
            <span class="text-xs bg-blue-100 text-blue-600 py-1 px-3 mb-1 rounded-full">#{tag}</span>
          ))}
        </div>
      </div>
      {image && <img src={image} alt={title} class="w-full h-auto rounded-xl shadow-md mb-8" />}
    </div>

    <!-- Project Content -->
   <Content />

  </div>

  <CTA />
  <Footer />
</Base>
